{"version":3,"sources":["Hooks/useDocumentList.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useDocumentList","pageNum","query","useState","isLoading","setLoading","error","setError","documents","setDocuments","hasMoreDocs","setHasMoreDocs","useEffect","cancel","axios","method","url","params","q","page","cancelToken","CancelToken","c","then","res","prevDocs","Set","data","docs","map","doc","title","length","catch","e","isCancel","App","setQuery","setPageNum","observer","useRef","lastDocument","useCallback","current","disconnect","IntersectionObserver","entries","isIntersecting","prevNum","observe","className","type","value","onChange","target","index","ref","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA4CeA,MAzCf,SAAyBC,EAASC,GAAQ,IAAD,EACLC,oBAAS,GADJ,mBAC9BC,EAD8B,KACnBC,EADmB,OAEXF,oBAAS,GAFE,mBAE9BG,EAF8B,KAEvBC,EAFuB,OAGHJ,mBAAS,IAHN,mBAG9BK,EAH8B,KAGnBC,EAHmB,OAICN,oBAAS,GAJV,mBAI9BO,EAJ8B,KAIjBC,EAJiB,KAoCrC,OA9BAC,qBAAU,WACNH,EAAa,MACf,CAACP,IAEHU,qBAAU,WAON,IAAIC,EANJ,GAAKX,EAsBL,OAlBAG,GAAW,GACXE,GAAS,GAETO,IAAM,CACFC,OAAQ,MACRC,IAAK,qCACLC,OAAQ,CAACC,EAAGhB,EAAOiB,KAAMlB,GACzBmB,YAAa,IAAIN,IAAMO,aAAY,SAAAC,GAAC,OAAIT,EAASS,OAClDC,MAAK,SAACC,GACLf,GAAa,SAAAgB,GACT,OAAO,YAAI,IAAIC,IAAJ,sBAAYD,GAAZ,YAAyBD,EAAIG,KAAKC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,gBAErE1B,GAAW,GACXM,EAAea,EAAIG,KAAKC,KAAKI,OAAS,MACvCC,OAAM,SAAAC,GACFpB,IAAMqB,SAASD,IAClB3B,GAAS,MAEN,kBAAMM,KArBTR,GAAW,KAsBhB,CAACJ,EAASC,IAEP,CACFM,YAAWE,cAAaJ,QAAOF,cCxCxB,MAA0B,iC,eCyD1BgC,MApDf,WAAgB,IAAD,EAEajC,mBAAS,IAFtB,mBAEND,EAFM,KAECmC,EAFD,OAGiBlC,mBAAS,GAH1B,mBAGNF,EAHM,KAGGqC,EAHH,OAUTtC,EAAgBC,EAASC,GAJ3BQ,EANW,EAMXA,YACAN,EAPW,EAOXA,UACAE,EARW,EAQXA,MACAE,EATW,EASXA,UAGI+B,EAAWC,mBACXC,EAAeC,uBAAY,SAAAZ,GAC5B1B,IACAmC,EAASI,SACVJ,EAASI,QAAQC,aAEnBL,EAASI,QAAU,IAAIE,sBAAqB,SAAAC,GACvCA,EAAQ,GAAGC,gBAAkBrC,GAC9B4B,GAAW,SAAAU,GAAO,OAAIA,EAAU,QAGjClB,GACDS,EAASI,QAAQM,QAAQnB,MAE1B,CAAC1B,EAAWM,IAMf,OACE,sBAAKwC,UAAU,SAAf,UACE,oBAAIA,UAAU,UAAd,iCACA,uBAAOA,UAAU,aAAaC,KAAK,SAASC,MAAOlD,EAAOmD,SAP9D,SAAsBnB,GACpBG,EAASH,EAAEoB,OAAOF,OAClBd,EAAW,MAMT,qBAAKY,UAAW1C,EAAUwB,OAAS,EAAI,YAAc,iBAArD,SACCxB,EAAUqB,KAAI,SAACC,EAAIyB,GAClB,OAAG/C,EAAUwB,SAAWuB,EAAQ,EACvB,sBAAKC,IAAKf,EAAV,cAAoCX,EAApC,MAA6BA,GAGpC,sBAAKoB,UAAU,WAAf,cAAsCpB,EAAtC,MAA+BA,QAInC,8BAAO1B,GAAa,qBAAKqD,IAAKC,EAAMR,UAAU,WAAWS,IAAM,iBAC/D,8BAAMrD,GAAS,kDCxCNsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b847d5c.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction useDocumentList(pageNum, query) {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [documents, setDocuments] = useState([]);\r\n    const [hasMoreDocs, setHasMoreDocs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setDocuments([]);\r\n    },[query]);\r\n\r\n    useEffect(() => {\r\n        if (!query) {\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setError(false);\r\n        let cancel;\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"http://openlibrary.org/search.json\",\r\n            params: {q: query, page: pageNum},\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then((res) => {\r\n            setDocuments(prevDocs => {\r\n                return [...new Set([...prevDocs, ...res.data.docs.map(doc => doc.title)])]\r\n            });\r\n            setLoading(false);\r\n            setHasMoreDocs(res.data.docs.length > 0);\r\n        }).catch(e => {\r\n            if(axios.isCancel(e)) return;\r\n            setError(true);\r\n        });\r\n        return () => cancel();\r\n    }, [pageNum, query]);\r\n\r\n    return{\r\n        documents, hasMoreDocs, error, isLoading\r\n    };\r\n}\r\n\r\nexport default useDocumentList;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useRef, useCallback } from \"react\";\nimport useDocumentList from \"./Hooks/useDocumentList\";\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n\n  const [query, setQuery] = useState(\"\");\n  const [pageNum, setPageNum] = useState(1);\n\n  const {\n    hasMoreDocs,\n    isLoading,\n    error,\n    documents\n  } = useDocumentList(pageNum, query);\n\n  const observer = useRef();\n  const lastDocument = useCallback(doc => {\n    if(isLoading) return;\n    if(observer.current) {\n      observer.current.disconnect();\n    }\n    observer.current = new IntersectionObserver(entries => {\n      if(entries[0].isIntersecting && hasMoreDocs) {\n        setPageNum(prevNum => prevNum + 1);\n      }\n    })\n    if(doc) {\n      observer.current.observe(doc);\n    }\n  }, [isLoading, hasMoreDocs]);\n\n  function handleChange(e) {\n    setQuery(e.target.value);\n    setPageNum(1);\n  };\n  return (\n    <div className=\"center\">\n      <h2 className=\"heading\"> Keep Searching... </h2>\n      <input className=\"search-box\" type=\"search\" value={query} onChange={handleChange}></input>\n      <div className={documents.length > 0 ? \"list-view\" : \"list-view-none\"}>\n      {documents.map((doc,index) => {\n        if(documents.length === index + 1) {\n          return <div ref={lastDocument} key={doc}> {doc} </div>\n        }\n        return (\n          <div className=\"document\" key={doc}> {doc} </div>\n        )\n      })}\n      </div>\n      <div>{ isLoading && <img src={logo} className=\"App-logo\" alt = \"Loading...\"></img>}</div>\n      <div>{error && \"Something went wrong... Please try again!\"}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}